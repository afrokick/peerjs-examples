{"version":3,"sources":["../node_modules/peerjs/dist sync","components/message.jsx","components/messages.jsx","components/connect.jsx","components/input.jsx","models/message.js","components/chat.jsx","index.js","App.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","useStyles","makeStyles","orangeAvatar","margin","color","backgroundColor","deepOrange","purpleAvatar","deepPurple","UserAvatar","isLocal","nickname","classes","name","Avatar","className","Message","message","text","ts","ListItem","alignItems","ListItemAvatar","ListItemText","primary","secondary","toLocaleString","theme","root","width","maxWidth","palette","background","paper","inline","display","Messages","messages","List","map","key","String","getTime","wrapper","spacing","padding","position","buttonProgress","top","left","marginLeft","marginTop","Connect","connected","connecting","myId","remoteId","onConnectClick","onMyIdChange","onRemoteIdChange","Paper","Box","m","TextField","placeholder","value","label","required","disabled","onChange","Button","variant","onClick","CircularProgress","size","NewMessageInput","onSendClick","useState","setText","Input","ev","target","onKeyPress","preventDefault","this","getRandomNumber","length","Array","i","Math","random","toString","join","Chat","props","setState","console","log","peer","peerjs","Peer","state","debug","on","onConnectedToPeerJS","onIncomingDataConnection","dc","connect","subscribeToDCEvents","data","addMessage","Date","error","onNewTextInputSend","send","sending","Container","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73f06b43.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 61;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core/';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles({\n    orangeAvatar: {\n        margin: 5,\n        color: '#fff',\n        backgroundColor: deepOrange[500],\n    },\n    purpleAvatar: {\n        margin: 5,\n        color: '#fff',\n        backgroundColor: deepPurple[500],\n    },\n});\n\nconst UserAvatar = ({ isLocal, nickname }) => {\n    const classes = useStyles();\n    const name = isLocal ? 'Me' : nickname;\n\n    return (\n        <Avatar className={isLocal ? classes.orangeAvatar : classes.purpleAvatar}>{name}</Avatar>\n\n    );\n};\n\nexport const Message = ({ message, classes }) => {\n    const { nickname, text, ts, isLocal } = message;\n\n    return (\n        <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n                <UserAvatar isLocal={isLocal} nickname={nickname} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={text}\n                secondary={<>{ts.toLocaleString()}</>}\n            />\n        </ListItem>\n    )\n}","import React from 'react';\nimport { Message } from './message';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { List } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n\nexport const Messages = ({ messages }) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <h3>Lets start conversation...</h3>\n            <List className={classes.root}>\n                {messages.map(message => {\n                    return <Message key={String(message.ts.getTime())} message={message} classes={classes} />\n                })}\n            </List>\n        </>)\n}","import React from 'react';\nimport { Box, TextField, Button, Paper, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(2),\n        position: 'relative',\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginLeft: '-12px',\n        marginTop: '-12px'\n    },\n}));\n\nexport const Connect = ({ connected, connecting, myId, remoteId, onConnectClick, onMyIdChange, onRemoteIdChange }) => {\n    const classes = useStyles();\n\n    return (\n        <Paper>\n            <Box m=\"5px\">\n                <TextField placeholder=\"Your nickname\" value={myId} label=\"Your nickname\" required disabled={connecting || connected} onChange={onMyIdChange} />\n                <TextField placeholder=\"Remote nickname\" value={remoteId} label=\"Remote nickname\" required disabled={connecting || connected} onChange={onRemoteIdChange} />\n            </Box>\n            {!connected && <Box className={classes.wrapper}>\n                <Button variant=\"contained\" onClick={onConnectClick} disabled={connecting}>Connect</Button>\n                {connecting && <CircularProgress size={24} className={classes.buttonProgress} />}\n            </Box>}\n        </Paper>\n    )\n}","import React, { useState } from 'react';\nimport { Input } from '@material-ui/core';\n\nexport const NewMessageInput = ({ onSendClick }) => {\n    const [text, setText] = useState('');\n\n    const onKeyPress = (ev) => {\n        if (ev.key !== 'Enter') return\n\n        ev.preventDefault();\n\n        onSendClick(text);\n\n        setText('');\n    }\n    return <Input placeholder=\"Enter text...\" value={text} onChange={(ev) => setText(ev.target.value)} onKeyPress={onKeyPress} />\n}","export class Message {\n    constructor({ nickname, text, ts, isLocal }) {\n        this.nickname = nickname;\n        this.text = text;\n        this.ts = ts;\n        this.isLocal = isLocal;\n    }\n}","import React from 'react';\nimport { peerjs } from 'peerjs';\nimport { Box, Container, Paper } from '@material-ui/core';\nimport { Messages } from './messages';\nimport { Connect } from './connect';\nimport { NewMessageInput } from './input';\nimport { Message } from '../models/message';\n\nconst getRandomNumber = (length = 5) => [...Array(length)].map(i => (~~(Math.random() * 36)).toString(36)).join('');\n\nexport class Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            myId: `user_${getRandomNumber()}`,\n            remoteId: '',\n            messages: [],\n            connecting: false,\n            connected: false,\n            sending: false,\n        }\n\n        this.peer = null;\n        this.dc = null;\n    }\n\n    addMessage(message) {\n        this.setState({\n            messages: [...this.state.messages, message]\n        })\n    }\n\n    onMyIdChange = ({ target }) => {\n        this.setState({\n            myId: target.value\n        })\n    }\n\n    onRemoteIdChange = ({ target }) => {\n        this.setState({\n            remoteId: target.value,\n        })\n    }\n\n    onConnectClick = () => {\n        console.log('start connecting...');\n        this.setState({ connecting: true })\n\n        this.peer = new peerjs.Peer(this.state.myId, {\n            debug: 3\n        });\n        this.peer.on('open', this.onConnectedToPeerJS);\n        this.peer.on('connection', this.onIncomingDataConnection);\n    }\n\n    onConnectedToPeerJS = () => {\n        if (!this.state.remoteId) return;\n\n        this.dc = this.peer.connect(this.state.remoteId);\n\n        this.subscribeToDCEvents();\n    }\n\n    subscribeToDCEvents = () => {\n        this.dc.on('open', () => {\n            console.log(`DC opened!`);\n\n            this.setState({\n                connecting: false,\n                connected: true,\n            });\n        });\n        this.dc.on('close', () => {\n            console.log(`DC closed!`);\n        });\n        this.dc.on('data', (data) => {\n            console.log(`DC data:${data}`);\n\n            this.addMessage(new Message({\n                nickname: this.dc.peer,\n                ts: new Date(),\n                text: data,\n                isLocal: false,\n            }))\n        });\n        this.dc.on('error', (error) => {\n            console.error(`DC error:${error}`);\n        });\n    }\n\n    onIncomingDataConnection = (dc) => {\n        console.log(`Incoming dc:`, dc);\n\n        this.dc = dc;\n\n        this.setState({\n            remoteId: dc.peer,\n        })\n\n        this.subscribeToDCEvents();\n    }\n\n    onNewTextInputSend = (text) => {\n        this.addMessage(new Message({\n            nickname: this.state.myId,\n            ts: new Date(),\n            text,\n            isLocal: true,\n        }));\n\n        this.dc.send(text);\n    }\n\n    render() {\n        const { myId, remoteId, connecting, connected, messages } = this.state;\n\n        return <Container maxWidth=\"sm\">\n            <Box>\n                <Connect\n                    myId={myId}\n                    remoteId={remoteId}\n                    connecting={connecting}\n                    connected={connected}\n                    onConnectClick={this.onConnectClick}\n                    onMyIdChange={this.onMyIdChange}\n                    onRemoteIdChange={this.onRemoteIdChange} />\n            </Box>\n            {connected && (<Box marginTop=\"10px\">\n                <Paper>\n                    <Box padding=\"5px\">\n                        <Messages messages={messages} />\n                    </Box>\n                    <Box padding=\"5px\">\n                        <NewMessageInput onSendClick={this.onNewTextInputSend} />\n                    </Box>\n                </Paper>\n            </Box>)}\n        </Container>\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport { Chat } from './components/chat';\nimport './App.css';\n\nexport function App() {\n  return (\n    <div className=\"App\">\n      <Chat />\n    </div>\n  );\n}\n"],"sourceRoot":""}